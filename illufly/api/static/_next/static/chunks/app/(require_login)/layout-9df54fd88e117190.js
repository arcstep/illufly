(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[390,792],{1226:()=>{},4856:(e,t,l)=>{Promise.resolve().then(l.bind(l,8435))},8435:(e,t,l)=>{"use strict";l.d(t,{A:()=>i,AuthProvider:()=>s});var n=l(5155),o=l(2115),r=l(6046),u=l(6828);let a=(0,o.createContext)({user_id:null,username:null,email:null,role:null,device_id:null,isAuthenticated:!1,login:async()=>{throw Error("AuthProvider not found")},logout:async()=>{throw Error("AuthProvider not found")},refresh_token:async()=>{throw Error("AuthProvider not found")}});function s(e){let{children:t}=e,l=(0,r.useRouter)(),s=(0,r.useSearchParams)(),i=(0,r.usePathname)(),c=["/login","/register","/forgot-password"],[d,h]=(0,o.useState)(null),[f,g]=(0,o.useState)(null),[p,_]=(0,o.useState)(null),[v,w]=(0,o.useState)(null),[P,m]=(0,o.useState)(null),[A,E]=(0,o.useState)(!1);(0,o.useEffect)(()=>{c.includes(i)||S()},[i]);let S=async()=>{let e=await fetch("".concat(u.J,"/auth/profile"),{credentials:"include"});if(e.ok){let t=await e.json();console.log(t),h(t.user_id),g(t.device_id),_(t.username),w(t.email),m(t.role),E(!0)}else l.push("/login")},y=async(e,t)=>{console.log("login >>> ",e,t);let n=await fetch("".concat(u.J,"/auth/login"),{method:"POST",credentials:"include",headers:{accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({username:e,password:t})});if(!n.ok)throw Error((await n.json()).detail||"Login failed");let o=await n.json();h(o.user_id),g(o.device_id),_(o.username),w(o.email),m(o.role),E(!0);let r=s.get("from")||"/";l.replace(r)},k=async()=>{await fetch("".concat(u.J,"/auth/logout"),{method:"POST",credentials:"include"}),h(null),_(null),w(null),m(null),E(!1),l.replace("/login")};return(0,n.jsx)(a.Provider,{value:{user_id:d,device_id:f,username:p,email:v,role:P,isAuthenticated:A,login:y,logout:k,refresh_token:S},children:t})}function i(){let e=(0,o.useContext)(a);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e}},6828:(e,t,l)=>{"use strict";l.d(t,{J:()=>o,t:()=>r});var n=l(5521);let o=l(2818).env.NEXT_PUBLIC_API_BASE_URL||"/api",r=e=>{e.response&&401===e.response.status?console.log("未授权，重定向到登录页"):console.log("API 请求错误:",e),n.default.push("/login")}}},e=>{var t=t=>e(e.s=t);e.O(0,[779,420,804,19,622,694,432,592,331,271,30,519,408,473,376,358],()=>t(4856)),_N_E=e.O()}]);