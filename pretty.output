@auth @token @api-doc @wip
Feature: 令牌管理系统(Mock版本) # bdd/features/fastapi/auth/mock/token.feature:2
  """
  令牌管理系统 API 文档
  基础路径: /api/auth
  版本: 0.7
  最后更新: 2024-12-15
  负责人: @xuehongwei
  - POST /auth/refresh-token: 刷新访问令牌
  - 参数 (Form):
  - refresh_token: str, 必填, 刷新令牌
  - 返回:
  - success: bool
  - access_token: str, 新的访问令牌
  - refresh_token: str, 新的刷新令牌
  - 错误码:
  - 400: 无效的令牌
  - 401: 令牌过期/未授权
  - 500: 服务器错误
  - POST /auth/revoke-token: 撤销用户令牌
  - 参数 (Form):
  - username: str, 必填, 用户名
  - 权限要求: admin
  - 返回:
  - success: bool
  - message: str
  - 错误码:
  - 400: 用户不存在
  - 403: 权限不足
  - 500: 服务器错误
  - POST /auth/revoke-access-token: 撤销访问令牌
  - 参数 (Form):
  - username: str, 必填, 用户名
  - 权限要求: admin
  - 返回:
  - success: bool
  - message: str
  - username: str
  - 令牌操作需要并发安全
  - 支持集群环境下的令牌同步
  - 所有操作需要记录审计日志
  """
  Background:   # bdd/features/fastapi/auth/mock/token.feature:50

  @core @refresh
  Scenario: [POST /auth/refresh-token] 基础令牌刷新  # bdd/features/fastapi/auth/mock/token.feature:59
    Given 初始化测试环境                              # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                 # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                               # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 用户已在设备A登录                            # bdd/features/steps/auth_login_steps.py:119
    When 发起令牌刷新请求                              # bdd/features/steps/auth_token_steps.py:150
    Then 系统应返回状态码 200                          # bdd/features/steps/auth_token_steps.py:164
      Assertion Failed: 期望状态码 200，实际得到 400
      Captured stdout:
      测试环境初始化完成
      令牌存储已清空
      已准备测试用户数据: {
        "admin": {
          "user_id": "admin1",
          "username": "admin",
          "roles": [
            "admin"
          ],
          "created_at": "2024-12-17T13:18:14.836594",
          "is_active": true,
          "password": "admin123",
          "password_hash": "hashed_admin123"
        },
        "user1": {
          "user_id": "user1",
          "username": "user1",
          "roles": [
            "user"
          ],
          "created_at": "2024-12-17T13:18:14.836611",
          "is_active": true,
          "password": "user1123",
          "password_hash": "hashed_user1123"
        }
      }
      DEBUG: Current test state: {'is_locked': False, 'is_active': True}
      DEBUG: User info: {'user_id': 'mock-user-001', 'username': 'testuser', 'email': 'testuser@example.com', 'roles': ['user', 'guest'], 'is_locked': False, 'is_active': True, 'require_password_change': False, 'created_at': '2024-12-17T21:18:14.848491'}
      DEBUG: Login successful
      Device A Login Response: {'success': True, 'token_data': {'user_id': 'mock-user-001', 'username': 'testuser', 'email': 'testuser@example.com', 'roles': ['user', 'guest'], 'is_locked': False, 'is_active': True, 'require_password_change': False}, 'require_password_change': False}
      Device A Cookies: <Cookies[<Cookie access_token=mock_access_token for testserver.local />, <Cookie device_id=mock_device_id for testserver.local />, <Cookie refresh_token=mock_refresh_token for testserver.local />]>
      刷新令牌请求状态码: 400
      错误响应: {"detail":"缺少刷新令牌"}
      
      Captured logging:
      INFO:httpx:HTTP Request: POST http://testserver/api/auth/login "HTTP/1.1 200 OK"
      INFO:httpx:HTTP Request: POST http://testserver/api/auth/refresh-token "HTTP/1.1 400 Bad Request"

    And 响应中包含                                  # None
      | 字段            | 类型     | 说明    |
      | success       | bool   | true  |
      | access_token  | string | 新访问令牌 |
      | refresh_token | string | 新刷新令牌 |

  @core @refresh @error
  Scenario Outline: [POST /auth/refresh-token] 异常令牌刷新 -- @1.1 异常场景  # bdd/features/fastapi/auth/mock/token.feature:84
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 用户持有过期的刷新令牌                                               # bdd/features/steps/auth_token_steps.py:76
    When 发起令牌刷新请求                                                   # bdd/features/steps/auth_token_steps.py:150
    Then 系统应返回状态码 401                                               # bdd/features/steps/auth_token_steps.py:164
    And 响应中包含错误信息 "令牌已过期"                                           # bdd/features/steps/auth_token_steps.py:204

  @core @refresh @error
  Scenario Outline: [POST /auth/refresh-token] 异常令牌刷新 -- @1.2 异常场景  # bdd/features/fastapi/auth/mock/token.feature:85
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 用户持有无效的刷新令牌                                               # bdd/features/steps/auth_token_steps.py:96
    When 发起令牌刷新请求                                                   # bdd/features/steps/auth_token_steps.py:150
    Then 系统应返回状态码 400                                               # bdd/features/steps/auth_token_steps.py:164
    And 响应中包含错误信息 "无效的刷新令牌格式"                                       # bdd/features/steps/auth_token_steps.py:204

  @core @refresh @error
  Scenario Outline: [POST /auth/refresh-token] 异常令牌刷新 -- @1.3 异常场景  # bdd/features/fastapi/auth/mock/token.feature:86
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 用户持有格式错误的刷新令牌                                             # bdd/features/steps/auth_token_steps.py:111
    When 发起令牌刷新请求                                                   # bdd/features/steps/auth_token_steps.py:150
    Then 系统应返回状态码 400                                               # bdd/features/steps/auth_token_steps.py:164
    And 响应中包含错误信息 "无效的刷新令牌格式"                                       # bdd/features/steps/auth_token_steps.py:204

  @core @refresh @error
  Scenario Outline: [POST /auth/refresh-token] 异常令牌刷新 -- @1.4 异常场景  # bdd/features/fastapi/auth/mock/token.feature:87
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 初始化测试环境                                                   # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                                      # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                                    # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 用户持有已使用的刷新令牌                                              # bdd/features/steps/auth_token_steps.py:125
    When 发起令牌刷新请求                                                   # bdd/features/steps/auth_token_steps.py:150
    Then 系统应返回状态码 401                                               # bdd/features/steps/auth_token_steps.py:164
      Assertion Failed: 期望状态码 401，实际得到 200
      Captured stdout:
      测试环境初始化完成
      令牌存储已清空
      已准备测试用户数据: {
        "admin": {
          "user_id": "admin1",
          "username": "admin",
          "roles": [
            "admin"
          ],
          "created_at": "2024-12-17T13:18:15.020844",
          "is_active": true,
          "password": "admin123",
          "password_hash": "hashed_admin123"
        },
        "user1": {
          "user_id": "user1",
          "username": "user1",
          "roles": [
            "user"
          ],
          "created_at": "2024-12-17T13:18:15.020861",
          "is_active": true,
          "password": "user1123",
          "password_hash": "hashed_user1123"
        }
      }
      测试环境初始化完成
      令牌存储已清空
      已准备测试用户数据: {
        "admin": {
          "user_id": "admin1",
          "username": "admin",
          "roles": [
            "admin"
          ],
          "created_at": "2024-12-17T13:18:15.022440",
          "is_active": true,
          "password": "admin123",
          "password_hash": "hashed_admin123"
        },
        "user1": {
          "user_id": "user1",
          "username": "user1",
          "roles": [
            "user"
          ],
          "created_at": "2024-12-17T13:18:15.022451",
          "is_active": true,
          "password": "user1123",
          "password_hash": "hashed_user1123"
        }
      }
      已设置已使用的刷新令牌: mock.refresh.token
      刷新令牌请求状态码: 200
      
      Captured logging:
      INFO:httpx:HTTP Request: POST http://testserver/api/auth/refresh-token "HTTP/1.1 200 OK"

    And 响应中包含错误信息 "令牌已在其他设备上使用"                                     # None

  @security @revoke @admin
  Scenario: [POST /auth/revoke-token] 管理员撤销用户令牌  # bdd/features/fastapi/auth/mock/token.feature:90
    Given 初始化测试环境                                # bdd/features/steps/auth_token_steps.py:8
    And 清空令牌存储                                   # bdd/features/steps/auth_token_steps.py:15
    And 准备测试用户数据                                 # bdd/features/steps/auth_token_steps.py:21
      | username | user_id | roles     |
      | admin    | admin1  | ["admin"] |
      | user1    | user1   | ["user"]  |
    Given 管理员已登录                                 # bdd/features/steps/auth_token_steps.py:226
      Assertion Failed: 管理员登录失败: {"detail":"认证失败"}
      Captured stdout:
      测试环境初始化完成
      令牌存储已清空
      已准备测试用户数据: {
        "admin": {
          "user_id": "admin1",
          "username": "admin",
          "roles": [
            "admin"
          ],
          "created_at": "2024-12-17T13:18:15.062514",
          "is_active": true,
          "password": "admin123",
          "password_hash": "hashed_admin123"
        },
        "user1": {
          "user_id": "user1",
          "username": "user1",
          "roles": [
            "user"
          ],
          "created_at": "2024-12-17T13:18:15.062533",
          "is_active": true,
          "password": "user1123",
          "password_hash": "hashed_user1123"
        }
      }
      DEBUG: Current test state: {'is_locked': False, 'is_active': True}
      DEBUG: User info: {'user_id': 'mock-user-001', 'username': 'admin', 'email': 'admin@example.com', 'roles': ['user', 'guest'], 'is_locked': False, 'is_active': True, 'require_password_change': False, 'created_at': '2024-12-17T21:18:15.064946'}
      DEBUG: Password verification failed
      DEBUG: Current test state: <Mock name='mock.get_user_state()' id='4688665360'>
      DEBUG: User info: {'user_id': 'mock-user-001', 'username': 'mockuser', 'email': 'mock@example.com', 'roles': ['user', 'guest'], 'is_locked': False, 'is_active': True, 'require_password_change': False, 'created_at': '2024-12-17T21:18:15.067041'}
      
      Captured logging:
      INFO:httpx:HTTP Request: POST http://testserver/api/auth/login "HTTP/1.1 401 Unauthorized"

    And 存在以下活跃令牌                                 # None
      | user_id | device_id | token_type    |
      | user1   | dev1      | access_token  |
      | user1   | dev2      | refresh_token |
    When 管理员请求撤销用户 "user1" 的所有令牌                 # None
    Then 系统应返回状态码 200                            # None
    And 响应中包含                                    # None
      | 字段      | 值                             |
      | success | true                          |
      | message | "Successfully revoked tokens" |
    And 该用户的所有令牌应被标记为无效                          # None
    And 审计日志应记录此操作                               # None
      """
        ## 实现注意事项
        - 所有令牌操作需要考虑并发安全
        - 令牌撤销需要支持集群环境
        - 需要实现令牌状态的持久化存储
        - 审计日志需要包含详细的操作信息
        - 令牌验证需要使用缓存提升性能
        - 支持令牌黑名单机制
      """
      | 字段       | 值                   |
      | action   | "revoke_all_tokens" |
      | admin_id | "admin1"            |
      | user_id  | "user1"             |

